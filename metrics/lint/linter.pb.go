// Copyright 2020 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: metrics/lint/linter.proto

package linter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Suggestion    string                 `protobuf:"bytes,3,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
	Keys          []string               `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	Line          int32                  `protobuf:"varint,5,opt,name=line,proto3" json:"line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_metrics_lint_linter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_lint_linter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_metrics_lint_linter_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Message) GetSuggestion() string {
	if x != nil {
		return x.Suggestion
	}
	return ""
}

func (x *Message) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Message) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

type Linter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Linter) Reset() {
	*x = Linter{}
	mi := &file_metrics_lint_linter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Linter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Linter) ProtoMessage() {}

func (x *Linter) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_lint_linter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Linter.ProtoReflect.Descriptor instead.
func (*Linter) Descriptor() ([]byte, []int) {
	return file_metrics_lint_linter_proto_rawDescGZIP(), []int{1}
}

func (x *Linter) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_metrics_lint_linter_proto protoreflect.FileDescriptor

const file_metrics_lint_linter_proto_rawDesc = "" +
	"\n" +
	"\x19metrics/lint/linter.proto\x12\x06linter\"\x7f\n" +
	"\aMessage\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1e\n" +
	"\n" +
	"suggestion\x18\x03 \x01(\tR\n" +
	"suggestion\x12\x12\n" +
	"\x04keys\x18\x04 \x03(\tR\x04keys\x12\x12\n" +
	"\x04line\x18\x05 \x01(\x05R\x04line\"5\n" +
	"\x06Linter\x12+\n" +
	"\bmessages\x18\x01 \x03(\v2\x0f.linter.MessageR\bmessagesB\n" +
	"Z\b.;linterb\x06proto3"

var (
	file_metrics_lint_linter_proto_rawDescOnce sync.Once
	file_metrics_lint_linter_proto_rawDescData []byte
)

func file_metrics_lint_linter_proto_rawDescGZIP() []byte {
	file_metrics_lint_linter_proto_rawDescOnce.Do(func() {
		file_metrics_lint_linter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metrics_lint_linter_proto_rawDesc), len(file_metrics_lint_linter_proto_rawDesc)))
	})
	return file_metrics_lint_linter_proto_rawDescData
}

var file_metrics_lint_linter_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_metrics_lint_linter_proto_goTypes = []any{
	(*Message)(nil), // 0: linter.Message
	(*Linter)(nil),  // 1: linter.Linter
}
var file_metrics_lint_linter_proto_depIdxs = []int32{
	0, // 0: linter.Linter.messages:type_name -> linter.Message
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_metrics_lint_linter_proto_init() }
func file_metrics_lint_linter_proto_init() {
	if File_metrics_lint_linter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metrics_lint_linter_proto_rawDesc), len(file_metrics_lint_linter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metrics_lint_linter_proto_goTypes,
		DependencyIndexes: file_metrics_lint_linter_proto_depIdxs,
		MessageInfos:      file_metrics_lint_linter_proto_msgTypes,
	}.Build()
	File_metrics_lint_linter_proto = out.File
	file_metrics_lint_linter_proto_goTypes = nil
	file_metrics_lint_linter_proto_depIdxs = nil
}
